 #Importing the Libraries
import pandas as pd
import numpy as np
from sklearn import preprocessing
import matplotlib.pyplot as plt
plt.rc("font", size=14)
from sklearn.linear_model import LogisticRegression from sklearn.model_selection import train_test_split import seaborn as sns
sns.set(style="white")
sns.set(style="whitegrid", color_codes=True)

#Importing the Dataset
df = pd.read_excel('/Users/AmrinSinghDhillon/Desktop/Book2.xlsx')
df

 #Viewing the Columns
df = df.dropna()
print(df.shape)
print(list(df.columns))

 #Turning Categorical Variables into Binary
cat_vars=['pitch','three_plus','batter_stance','pitcher_throws'] for var in cat_vars:
    cat_list='var'+'_'+var
    cat_list = pd.get_dummies(df[var], prefix=var)
    df=df1
    df
    
     cat_vars=['three_plus','batter_stance','pitcher_throws','pitch'] df_vars=df.columns.values.tolist()
to_keep=[i for i in df_vars if i not in cat_vars]

 #Viewing New Categories with Binary Variables
df=df[to_keep]
df.columns.values

 #Identifying the Dependent and Independent Variables
X = df.loc[:, df.columns != 'is_in_play']
y = df.loc[:, df.columns == 'is_in_play']

 #Splitting the Data into Train and Test Sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3,␣ 􏰀→random_state=0)
logreg = LogisticRegression()
logreg.fit(X_train, y_train)

 #Printing Accuracy of the Classifier
y_pred = logreg.predict(X_test)
print('Accuracy of logistic regression classifier on test set: {:.2f}'.
􏰀→format(logreg.score(X_test, y_test)))

 #Viewing the Classification Report
from sklearn.metrics import classification_report print(classification_report(y_test, y_pred))

 #Creating the ROC Curve
from sklearn.metrics import roc_auc_score
from sklearn.metrics import roc_curve
logit_roc_auc = roc_auc_score(y_test, logreg.predict(X_test))
fpr, tpr, thresholds = roc_curve(y_test, logreg.predict_proba(X_test)[:,1]) plt.figure()
plt.plot(fpr, tpr, label='Logistic Regression (area = %0.2f)' % logit_roc_auc) plt.plot([0, 1], [0, 1],'r--')
plt.xlim([0.0, 1.0])
plt.ylim([0.0, 1.05])
plt.xlabel('False Positive Rate')
plt.ylabel('True Positive Rate')
plt.title('Receiver operating characteristic')
plt.legend(loc="lower right")
plt.savefig('Log_ROC')
plt.show()
